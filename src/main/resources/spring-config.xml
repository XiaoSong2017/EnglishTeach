<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:property-placeholder location="classpath*:/jdbc.properties"/>
    <!-- 配置c3p0连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialPoolSize" value="${jdbc.initalPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
        <property name="debugUnreturnedConnectionStackTraces" value="true"/>
    </bean>
    <!-- 配置Hibernate相关属性 -->
    <!-- 注入连接池 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
          p:dataSource-ref="dataSource">
        <!-- 配置Hibernate的属性 -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.connection.autocommit">true</prop>
                <prop key="transaction.auto_close_session">true</prop>
                <!-- 自动建表 -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.current_session_context_class">
                    org.springframework.orm.hibernate5.SpringSessionContext
                </prop>
            </props>
        </property>
        <!-- 加载Hibernate中的映射文件 -->
        <property name="annotatedClasses">
            <list>
                <value>po.AcademyPo</value>
                <value>po.AnswerRecordPo</value>
                <value>po.ClassesPo</value>
                <value>po.ComponentPo</value>
                <value>po.CoursePo</value>
                <value>po.ElectiveCoursePo</value>
                <value>po.ExaminationPaperPo</value>
                <value>po.OptionPo</value>
                <value>po.ProblemPo</value>
                <value>po.QuestionPo</value>
                <value>po.SpecialtyPo</value>
                <value>po.StudentPo</value>
                <value>po.StudentLogPo</value>
                <value>po.TeachResourcePo</value>
                <value>po.TeacherPo</value>
                <value>po.TeachingPo</value>
                <value>po.TopicPo</value>
            </list>
        </property>
    </bean>
    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory"/>
    <!--配置事务属性-->
    <tx:annotation-driven proxy-target-class="true"/>
    <tx:advice id="txAdvice" >
        <tx:attributes>
            <tx:method name="get" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    <!--服务文件-->
    <bean name="userService" class="service.UserService" scope="prototype" autowire="byName"/>
    <bean name="fileService" class="service.FileService" scope="prototype" autowire="byName"/>
    <bean name="teachingService" class="service.TeachingService" scope="prototype" autowire="byName"/>
    <bean name="courseService" class="service.CourseService" scope="prototype" autowire="byName"/>
    <bean name="electiveCourseService" class="service.ElectiveCourseService" scope="prototype" autowire="byName"/>
    <bean name="studentLogService" class="service.StudentLogService" scope="prototype" autowire="byName"/>
    <bean name="examinationPaperService" class="service.ExaminationPaperService" scope="prototype" autowire="byName"/>
    <bean name="problemService" class="service.ProblemService" scope="prototype" autowire="byName"/>
    <bean name="topicService" class="service.TopicService" scope="prototype" autowire="byName"/>
    <!--Dao文件-->
    <bean name="baseDao" class="dao.implement.BaseDaoImpl" scope="prototype" autowire="byName"/>
    <bean name="studentDao" class="dao.implement.StudentDaoImpl" scope="prototype" autowire="byName"/>
    <bean name="teacherDao" class="dao.implement.TeacherDaoImpl" scope="prototype" autowire="byName"/>
    <bean name="filesDao" class="dao.implement.FilesDaoImpl" scope="prototype" autowire="byName"/>
    <bean name="teachingDao" class="dao.implement.TeachingDaoImpl" scope="prototype" autowire="byName"/>
    <bean name="courseDao" class="dao.implement.CourseDaoImpl" scope="prototype" autowire="byName"/>
    <bean name="electiveCourseDao" class="dao.implement.ElectiveCourseDaoImpl" scope="prototype" autowire="byName"/>
    <bean name="academyDao" class="dao.implement.AcademyDaoImpl" scope="prototype" autowire="byName"/>
    <bean name="specialtyDao" class="dao.implement.SpecialtyDaoImpl" scope="prototype" autowire="byName"/>
    <bean name="classesDao" class="dao.implement.ClassesDaoImpl" scope="prototype" autowire="byName"/>
    <bean name="studentLogDao" class="dao.implement.StudentLogDaoImpl" scope="prototype" autowire="byName"/>
    <bean name="examinationPaperDao" class="dao.implement.ExaminationPaperDaoImpl" scope="prototype" autowire="byName"/>
    <bean name="problemDao" class="dao.implement.ProblemDaoImpl" scope="prototype" autowire="byName"/>
    <bean name="topicDao" class="dao.implement.TopicDaoImpl" scope="prototype" autowire="byName"/>
    <!--Bean文件-->
    <bean name="academyBean" class="bean.AcademyBean" scope="prototype" autowire="byName"/>
    <bean name="specialtyBean" class="bean.SpecialtyBean" scope="prototype" autowire="byName"/>
    <bean name="classesBean" class="bean.ClassesBean" scope="prototype" autowire="byName"/>
    <bean name="studentBean" class="bean.StudentBean" scope="prototype" autowire="byName"/>
    <bean name="courseBean" class="bean.CourseBean" scope="prototype" autowire="byName"/>
    <bean name="electiveCourseBean" class="bean.ElectiveCourseBean" scope="prototype" autowire="byName"/>
    <bean name="examinationPaperBean" class="bean.ExaminationPaperBean" scope="prototype"  autowire="byName"/>
    <bean name="teachResourceBean" class="bean.TeachResourceBean" scope="prototype" autowire="byName"/>
    <bean name="problemBean" class="bean.ProblemBean" scope="prototype" autowire="byName"/>
    <bean name="topicBean" class="bean.TopicBean" scope="prototype" autowire="byName"/>
    <!--配置Quartz框架来定时操作任务-->
   <!-- <bean id="quartz" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean" p:targetObject-ref=""
    p:targetMethod=""/>-->
</beans>